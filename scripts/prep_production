#!/usr/bin/env bash

# Perform configuration setup to support a production environment.
# Usage: prep_production DOMAIN EXPORT_PREFIX

# Arguments:
#   DOMAIN          The domain at which this instance will be reachable
#   EXPORT_PREFIX   The prefix behind which to hide sensitive data

set -e
set -o pipefail

function die { echo $@; exit 1; }

DOMAIN=$1
EXPORT_PREFIX=$2
SITE_ROOT="$(readlink -f "$(dirname "$0")/..")"

[[ -z "$DOMAIN" ]] && die "Error: Please provide the DOMAIN for this instance"
[[ -z "$EXPORT_PREFIX" ]] && die "Error: Please provide the EXPORT_PREFIX for this instance"

echo "Installing dependencies"
sudo add-apt-repository -y ppa:certbot/certbot
sudo apt-get install -y certbot python-certbot-nginx

echo "Retrieving diffie-hellman parameters"
curl https://ssl-config.mozilla.org/ffdhe2048.txt > /etc/letsencrypt/dhparams.pem

echo "Generating self-signed catch-all certificate"
[[ -d /etc/letsencrypt/keys ]] || sudo mkdir /etc/letsencrypt/keys
# 3650 days is ~10 years
openssl req -x509 -nodes \
    -days 3650 \
    -subj "/CN=*" \
    -newkey rsa:2048 \
    -keyout /etc/letsencrypt/keys/selfsign.key \
    -out /etc/letsencrypt/selfsign.crt

echo "Fetching initial certificate"
sudo certbot certonly \
  --register-unsafely-without-email \
  --agree-tos \
  --nginx \
  -d $DOMAIN

NGINX=/etc/nginx/sites-enabled
echo "Updating nginx configuration to support HTTPS"
cat $SITE_ROOT/etc/nginx.secure \
    | sed "s@{{ site_root }}@$SITE_ROOT@g" \
    | sed "s@{{ domain_name }}@$DOMAIN@g" \
    | sed "s@{{ export_prefix }}@$EXPORT_PREFIX@g" \
    | sudo tee $NGINX/$DOMAIN

echo "Ensuring the blocking of unknown hosts covers HTTPS, too"
sudo cp $SITE_ROOT/etc/nginx.block_unknown_443 $NGINX/block_unknown
sudo service nginx reload

echo "Installing scheduled activities"
if sudo crontab -l > /dev/null; then
    sudo crontab -l > ~/crontab
else
    echo -n '' > ~/crontab
fi
cat <<HEREDOC > ~/crontab-additions
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
0 0 6 * * certbot renew && systemctl reload nginx
15 15 * * * apt-get update && DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -yq && apt-get autoremove -y
1 * * * * /usr/local/bin/watchdog patrol
30 * * * 1 pip3 install --upgrade checkniner-watchdog
HEREDOC
cat ~/crontab ~/crontab-additions | sudo crontab -
mv ~/crontab ~/crontab.old

echo "Finished preparing for production"
